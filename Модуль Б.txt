@Мой

ОбщиеФормы.ОсновнаяФорма.Модуль:
&НаСервере
Функция ПриОткрытииНаСервере()
	Если Не Константы.Студент.Получить() = ""
		Тогда
		Возврат 1
	Иначе
		Возврат 0
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Проверка = ПриОткрытииНаСервере();
	Если Проверка = 1
		Тогда
		ЭтаФорма.Закрыть();
		ОткрытьФорму("ОбщаяФорма.ОсновноеМеню");
	Иначе
		ЭтаФорма.Закрыть();
		ОткрытьФорму("ОбщаяФорма.АвторизацияСтудента");
	КонецЕсли;
КонецПроцедуры




ОбщиеФормы.АвторизацияСтудента.Модуль:
&НаКлиенте
Процедура Войти(Команда)
	Проверка = ВойтиНаСервере();
	Если Проверка = "1"
		Тогда
		УстановкаКонстант();
		ЭтаФорма.Закрыть();
		ОткрытьФорму("ОбщаяФорма.ОсновноеМеню");
	ИначеЕсли Проверка = "0"
		Тогда
		ПредупреждениеАсинх("Проверьте ФИО и Пароль на корректность", 5, "Ошибка");
	ИначеЕсли Проверка = 12
		Тогда
		ПредупреждениеАсинх("Проблемы с подключением", 5, "Ошибка");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВойтиНаСервере()
	Попытка
		Соединение = Новый HTTPСоединение("localhost");
		Запрос = Новый HTTPЗапрос("server/hs/auth/students");
		ЗапросСтрока = Студент + ";" + Пароль;
		Запрос.УстановитьТелоИзСтроки(ЗапросСтрока);
		Ответ = Соединение.Записать(Запрос);
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		Возврат ОтветСтрока;
	Исключение
		Возврат 12
	КонецПопытки;
КонецФункции

Процедура УстановкаКонстант()
	Константы.Студент.Установить(Студент);
КонецПроцедуры




ОбщиеФормы.ОсновноеМеню.Модуль:
&НаСервере
Процедура ПриОткрытииНаСервере()
	СпрВсехКурсов = Справочники.ВсеКурсы.Выбрать();
	СпрыВсехКурсов = 0;
	Пока СпрВсехКурсов.Следующий()
		Цикл
		СпрыВсехКурсов = СпрыВсехКурсов + 1;
	КонецЦикла;
	Для Код = 1 ПО СпрыВсехКурсов
		Цикл
		Спр = Справочники.ВсеКурсы.НайтиПоКоду(Код).ПолучитьОбъект();
		Спр.УстановитьПометкуУдаления(Истина);
		Спр.Удалить();
	КонецЦикла;
	СпрРекКурсов = Справочники.КурсыПоЗаписи.Выбрать();
	СпрыРекКурсов = 0;
	Пока СпрРекКурсов.Следующий()
		Цикл
		СпрыРекКурсов = СпрыРекКурсов + 1;
	КонецЦикла;
	Для Код = 1 ПО СпрыРекКурсов
		Цикл
		Спр = Справочники.КурсыПоЗаписи.НайтиПоКоду(Код).ПолучитьОбъект();
		Спр.УстановитьПометкуУдаления(Истина);
		Спр.Удалить();
	КонецЦикла;
	СпрФайлов = Справочники.Файлы.Выбрать();
	СпрыФайлов = 0;
	Пока СпрФайлов.Следующий()
		Цикл
		СпрыФайлов =СпрыФайлов + 1;
	КонецЦикла;
	Для Код = 1 ПО СпрыФайлов
		Цикл
		Спр = Справочники.Файлы.НайтиПоКоду(Код).ПолучитьОбъект();
		Спр.УстановитьПометкуУдаления(Истина);
		Спр.Удалить();
	КонецЦикла;
	СпрФайловЛоготипов = Справочники.ФайлыЛоготипов.Выбрать();
	СпрыФайловЛоготипов = 0;
	Пока СпрФайловЛоготипов.Следующий()
		Цикл
		СпрыФайловЛоготипов = СпрыФайловЛоготипов + 1;
	КонецЦикла;
	Для Код = 1 ПО СпрыФайловЛоготипов
		Цикл
		Спр = Справочники.ФайлыЛоготипов.НайтиПоКоду(Код).ПолучитьОбъект();
		Спр.УстановитьПометкуУдаления(Истина);
		Спр.Удалить();
	КонецЦикла;
	СпрЗан = Справочники.Занятия.Выбрать();
	СпрыЗан = 0;
	Пока СпрЗан.Следующий()
		Цикл
		СпрыЗан = СпрыЗан + 1;
	КонецЦикла;
	Для Код = 1 ПО СпрыЗан
		Цикл
		Спр = Справочники.Занятия.НайтиПоКоду(Код).ПолучитьОбъект();
		Спр.УстановитьПометкуУдаления(Истина);
		Спр.Удалить();
	КонецЦикла;
	
	ЗагрузкаВсехКурсов();
	ЗагрузкаКурсовПоЗаписи();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

Процедура ЗагрузкаВсехКурсов()

	Попытка
		Соединение = Новый HTTPСоединение("localhost");
		Запрос = Новый HTTPЗапрос("server/hs/obmen/trainingcourses");
		Ответ = Соединение.Записать(Запрос);
		ОтветСтрока = XMLЗначение(Тип("ХранилищеЗначения"), Ответ.ПолучитьТелоКакСтроку()).Получить();
		Для Каждого СтруктураОтвета из ОтветСтрока
			Цикл
			СпрВсе = Справочники.ВсеКурсы.СоздатьЭлемент();
			СпрВсе.Наименование = СтруктураОтвета.НазваниеКурса;
			СпрВсе.Описание = СтруктураОтвета.ОписаниеКурса;
			СпрФайлЛого = Справочники.ФайлыЛоготипов.СоздатьЭлемент();
			СпрФайлЛого.Наименование = СтруктураОтвета.НазваниеКурса;
			СпрФайлЛого.Значение = СтруктураОтвета.ЗначениеЛоготипа;
			СпрФайлЛого.Записать();
			СпрВсе.Логотип = СпрФайлЛого.Ссылка;
			СпрВсе.ЛогоЗначение = ПолучитьНавигационнуюСсылку(СпрВсе.Логотип, "Значение");
			СпрВсе.Преподаватель = СтруктураОтвета.Преподаватель;
			СпрВсе.ДатаНачала = СтруктураОтвета.ДатаНачалаКурса;
			СпрВсе.ДатаОкончания = СтруктураОтвета.ДатаОкончанияКурса;
			Для Каждого Занятие Из СтруктураОтвета.Занятия
				Цикл
				СпрЗан = Справочники.Занятия.СоздатьЭлемент();
				СпрЗан.Наименование = Занятие.НазваниеЗанятия;
				Для Каждого Видео Из Занятие.СписокВидео
					Цикл
					СпрФайл = Справочники.Файлы.СоздатьЭлемент();
					СпрФайл.Наименование = Видео.НазваниеВидео;
					СпрФайл.Значение = Видео.ЗначениеВидео;
					Попытка
						Файл = Справочники.Файлы.НайтиПоНаименованию(СпрФайл.Наименование).ПолучитьОбъект();
						Файл.Записать();
						СтрокаТЧЗан = СпрЗан.СписокВидео.Добавить();
						СтрокаТЧЗан.Видео = Файл.Ссылка;
						СтрокаТЧЗан.Название = Видео.НазваниеВидео;
					Исключение
						СпрФайл.Записать();
						СтрокаТЧЗан = СпрЗан.СписокВидео.Добавить();
						СтрокаТЧЗан.Видео = СпрФайл.Ссылка;
						СтрокаТЧЗан.Название = Видео.НазваниеВидео;
					КонецПопытки;
				КонецЦикла;
				СпрФЛ = Справочники.ФайлыЛоготипов.СоздатьЭлемент();
				СпрФЛ.Наименование = Занятие.НазваниеЗанятия;
				СпрФЛ.Значение = Занятие.Логотип;
				СпрФЛ.Записать();
				СпрЗан.ЛоготипЗначение = СпрФЛ.Ссылка;
				СпрЗан.Логотип = ПолучитьНавигационнуюСсылку(СпрЗан.ЛоготипЗначение, "Значение");
				СпрЗан.Записать();
				СтрокаТЧ = СпрВсе.Занятия.Добавить();
				СтрокаТЧ.Название = СпрЗан.Ссылка;
				СтрокаТЧ.ДатаНачала = Занятие.НачалоЗанятия;
				СтрокаТЧ.ДатаОкончания = Занятие.КонецЗанятия;
			КонецЦикла;
			Для Каждого Тест Из СтруктураОтвета.Тесты
				Цикл
				СтрокаТЧ = СпрВсе.Тесты.Добавить();
				СтрокаТЧ.Вопрос = Тест.ВопросТеста;
				СтрокаТЧ.ВерныйОтвет = Тест.ПравильныйОтвет;
				СтрокаТЧ.НеверныйОтвет1 = Тест.НеправильныйОтвет1;
				СтрокаТЧ.НеверныйОтвет2 = Тест.НеправильныйОтвет2;
			КонецЦикла;
			СпрВсе.Записать();
			
		КонецЦикла;
	Исключение
		Сообщить("Ошибка" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

Процедура ЗагрузкаКурсовПоЗаписи()
	Попытка
		Соединение = Новый HTTPСоединение("localhost");
		Запрос = Новый HTTPЗапрос("server/hs/obmen/trainingcourseswithstudy");
		Запрос.УстановитьТелоИзСтроки(Константы.Студент.Получить());
		Ответ = Соединение.Записать(Запрос);
		ОтветСтрока = XMLЗначение(Тип("ХранилищеЗначения"), Ответ.ПолучитьТелоКакСтроку()).Получить();
		Для Каждого СтруктураОтвета Из ОтветСтрока
			Цикл
			СпрРек = Справочники.КурсыПоЗаписи.СоздатьЭлемент();
			СпрРек.Наименование = СтруктураОтвета.НазваниеКурса;
			СпрРек.Описание = СтруктураОтвета.ОписаниеКурса;
			СпрФайлЛого = Справочники.ФайлыЛоготипов.НайтиПоНаименованию(СтруктураОтвета.НазваниеКурса).ПолучитьОбъект();
			СпрРек.Логотип = СпрФайлЛого.Ссылка;
			СпрРек.ЛогоЗначение = ПолучитьНавигационнуюСсылку(СпрРек.Логотип, "Значение");
			СпрРек.Преподаватель = СтруктураОтвета.Преподаватель;
			СпрРек.ДатаНачала = СтруктураОтвета.ДатаНачалаКурса;
			СпрРек.ДатаОкончания = СтруктураОтвета.ДатаОкончанияКурса;
			Для Каждого Занятие Из СтруктураОтвета.Занятия
				Цикл
				СпрЗан = Справочники.Занятия.НайтиПоНаименованию(Занятие.НазваниеЗанятия);
				СтрокаТЧ = СпрРек.Занятия.Добавить();
				СтрокаТЧ.Название = СпрЗан.Ссылка;
				СтрокаТЧ.ДатаНачала = Занятие.НачалоЗанятия;
				СтрокаТЧ.ДатаОкончания = Занятие.КонецЗанятия; 
			КонецЦикла;
		Для Каждого Тест Из СтруктураОтвета.Тесты
			Цикл
			СтрокаТЧ = СпрРек.Тесты.Добавить();
			СтрокаТЧ.Вопрос = Тест.ВопросТеста;
			СтрокаТЧ.ВерныйОтвет = Тест.ПравильныйОтвет;
			СтрокаТЧ.НеверныйОтвет1 = Тест.НеправильныйОтвет1;
			СтрокаТЧ.НеверныйОтвет2 = Тест.НеправильныйОтвет2;
		КонецЦикла;
		СпрРек.Записать();
	КонецЦикла;
	Исключение
		Сообщить("Не удалось подключиться к серверу");
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьРассписание(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.ПланировщикЗанятий");
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьВсеКурсы(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.ВсеКурсы");
КонецПроцедуры

&НаКлиенте
Процедура МоиКурсы(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.МоиКурсы");
КонецПроцедуры




ОбщиеФормы.ПланировщикЗанятий.Модуль:
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьПланировщик();
	
	Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	Планировщик.КратностьПериодическогоВарианта = 24;
	Планировщик.ОтступСНачалаПереносаШкалыВремени = 8;
	Планировщик.ОтступСКонцаПереносаШкалыВремени = 9;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	НачалоПериода = НачалоДня(ТекущаяДата());
	КонецПериода = КонецДня(ТекущаяДата());
	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоПериода, КонецПериода);
КонецПроцедуры

Процедура ЗаполнитьПланировщик()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Курсы.Наименование КАК Наименование,
		|	КурсыЗанятия.Название КАК НаименованиеЗанятия,
		|	КурсыЗанятия.ДатаНачала КАК ДатаНачала,
		|	КурсыЗанятия.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Справочник.КурсыПоЗаписи.Занятия КАК КурсыЗанятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КурсыПоЗаписи КАК Курсы
		|		ПО КурсыЗанятия.Ссылка = Курсы.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДатаНачала = СтрРазделить(Лев(Прав(Строка(ВыборкаДетальныеЗаписи.ДатаНачала), 8), 5), ":"); 
		ДатаОкончания = Лев(Прав(Строка(ВыборкаДетальныеЗаписи.ДатаОкончания), 8), 5);
		ДатаССек = Прав(Строка(ВыборкаДетальныеЗаписи.ДатаНачала), 8);
		
		ЧасыНач = Число(ДатаНачала[0]);
		МинутыНач = Число(ДатаНачала[1]);
		
		ГодНач = Год(ВыборкаДетальныеЗаписи.ДатаНачала);
		МесяцНач = Месяц(ВыборкаДетальныеЗаписи.ДатаНачала);
		ДеньНач = День(ВыборкаДетальныеЗаписи.ДатаНачала);     
		
		ДатаОкончания = СтрРазделить(Лев(Прав(Строка(ВыборкаДетальныеЗаписи.ДатаОкончания), 8), 5), ":");
		
		ЧасыКон = Число(ДатаОкончания[0]);
		МинутыКон = Число(ДатаОкончания[1]);
		
		ГодКон = Год(ВыборкаДетальныеЗаписи.ДатаОкончания);
		МесяцКон = Месяц(ВыборкаДетальныеЗаписи.ДатаОкончания);
		ДеньКон = День(ВыборкаДетальныеЗаписи.ДатаОкончания);
		
		ДатаНачала = Дата(ГодНач, МесяцНач, ДеньНач, ЧасыНач, МинутыНач, 00);
		ДатаОкончания = Дата(ГодКон, МесяцКон, ДеньКон, ЧасыКон, МинутыКон, 00);  
		
        НовыйЭлемент = Планировщик.Элементы.Добавить(ДатаНачала, ДатаОкончания);
		НовыйЭлемент.Текст = Строка(ВыборкаДетальныеЗаписи.Наименование) + Символы.ПС + Строка(ВыборкаДетальныеЗаписи.НаименованиеЗанятия);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВозвратНазад(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.ОсновноеМеню");
КонецПроцедуры




ОбщиеФормы.МоиКурсы.Модуль:
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СпрсОсн = Справочники.КурсыПоЗаписи.Выбрать();
	СпрыОсн = 0;
	Пока СпрсОсн.Следующий()
		Цикл
		СпрыОсн = СпрыОсн + 1;
	КонецЦикла;
	Для Код = 1 По СпрыОсн
		Цикл
		СпрОсн = Справочники.КурсыПоЗаписи.НайтиПоКоду(Код).ПолучитьОбъект(); 
		НовЭл = МоиКурсы.Добавить();
		НовЭл.Название = СпрОсн.Наименование;
		НовЭл.Логотип = ПолучитьНавигационнуюСсылку(СпрОсн.Логотип, "Значение");
		НовЭл.ДатаНачала = Строка(СпрОсн.ДатаНачала);
		НовЭл.ДатаОкончания = Строка(СпрОсн.ДатаОкончания);
		НовЭл.Описание = СпрОсн.Описание;
	КонецЦикла;
	НомерКурса = 0;
	Для Каждого ТекСтрока Из МоиКурсы 
		Цикл
		СпрОсн = Справочники.КурсыПоЗаписи.НайтиПоНаименованию(ТекСтрока.Название).ПолучитьОбъект();
		Родитель = Элементы.ГруппаМоиКурсы;
		НомерКурса = НомерКурса + 1;
		Раз = СпрОсн.ДатаОкончания - ТекущаяДата();
		Дни = Цел(Раз / 3600 / 24);
		Часы = Цел((Раз % 86400) / 3600);
		
		Если Раз = 0
			Тогда
			Сообщить("Курс " + СпрОсн.Наименование + " закончился");
			СпрОсн.УстановитьПометкуУдаления(Истина);
			СпрОсн.Удалить();
		КонецЕсли;
		
		Страниц = Элементы.Добавить("Страница" + НомерКурса, Тип("ГруппаФормы"), Родитель);
		Страниц.Вид = ВидГруппыФормы.Страница;
		Страниц.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Страниц.ЦветФона = WebЦвета.Черный;
		Страниц.Заголовок = "Курс " + Строка(НомерКурса);
		Страниц.ЦветТекстаЗаголовка = WebЦвета.Белый;
		
		ПодГ = Элементы.Добавить("ПодГруппа" + НомерКурса, Тип("ГруппаФормы"), Элементы["Страница" + НомерКурса]);
		ПодГ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ПодГ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ПодГ.ЦветФона = WebЦвета.Серый;
		
		ПодПодГ = Элементы.Добавить("ПодПодГруппа" + НомерКурса, Тип("ГруппаФормы"), Элементы["ПодГруппа" + НомерКурса]);
		ПодПодГ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ПодПодГ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ПодПодГ.РастягиватьПоГоризонтали = Истина;
		
		Лого = Элементы.Добавить("ЭлЛоготип_" + МоиКурсы.Индекс(ТекСтрока), Тип("ПолеФормы"), Элементы["ПодГруппа" + Строка(НомерКурса)]);
		Лого.Вид = ВидПоляФормы.ПолеКартинки;
		Лого.ПутьКДанным = "МоиКурсы[" + МоиКурсы.Индекс(ТекСтрока) + "].Логотип";
		Лого.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Лого.РастягиватьПоГоризонтали = Ложь;
		Лого.РастягиватьПоВертикали = Ложь;
		Лого.РазмерКартинки = РазмерКартинки.Пропорционально;
		Лого.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
		Лого.Ширина = 15;
		Лого.Гиперссылка = Истина;
		
		Назв = Элементы.Добавить("Назв" + НомерКурса, Тип("ДекорацияФормы"), Элементы["ПодПодГруппа" + НомерКурса]);
		Назв.Вид = ВидДекорацииФормы.Надпись;
		Назв.Заголовок = ТекСтрока.Название;
		Назв.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
		Назв.ЦветТекста = WebЦвета.Белый;
		
		ПодГ2 = Элементы.Добавить("ПодГруппа_" + НомерКурса + "_2", Тип("ГруппаФормы"), Элементы["Страница" + НомерКурса]);
		ПодГ2.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ПодГ2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		Остаток = Элементы.Добавить("Ост" + НомерКурса, Тип("ДекорацияФормы"), Элементы["ПодГруппа_" + НомерКурса + "_2"]);
		Остаток.Вид = ВидДекорацииФормы.Надпись;
		Остаток.Заголовок = "Курс будет доступен" + Символы.ПС + " ещё " + Дни + " дней и " + Часы + " часа.";
		Остаток.ЦветТекста = WebЦвета.Белый;
		
		Элементы.МоиКурсы.Заголовок = "Мои курсы(" + НомерКурса + ")";
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВозвратНазад(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.ОсновноеМеню");
КонецПроцедуры




ОбщиеФормы.ВсеКурсы.Модуль:
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка
		Соединение = Новый HTTPСоединение("localhost");
		Запрос = Новый HTTPЗапрос("server/hs/obmen/trainingcourses");
		Ответ = Соединение.Записать(Запрос);
		ОтветСтрока = XMLЗначение(Тип("ХранилищеЗначения"), Ответ.ПолучитьТелоКакСтроку()).Получить();
		Для Каждого СтруктураОтвета из ОтветСтрока
			Цикл
			НовЭл = ВсеКурсы.Добавить();
			НовЭл.Название = СтруктураОтвета.НазваниеКурса;
			НовЭл.Описание = СтруктураОтвета.ОписаниеКурса;
			СпрФ = Справочники.ФайлыЛоготипов.НайтиПоНаименованию(СтруктураОтвета.НазваниеКурса).ПолучитьОбъект();
			НовЭл.Логотип = ПолучитьНавигационнуюСсылку(Спрф.Ссылка, "Значение");
		КонецЦикла;
		НомерКурса = 0;
		Для Каждого ТекСтрока Из ВсеКурсы
			Цикл
			Родитель = Элементы.ГруппаВсеКурсы;
			НомерКурса = НомерКурса + 1;
			
			НовГруппа = Элементы.Добавить("Группа_" + ВсеКурсы.Индекс(ТекСтрока), Тип("ГруппаФормы"), Родитель);
			НовГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			Если НомерКурса % 2 = 0
				Тогда
				НовГруппа.ЦветФона = WebЦвета.Фуксин;
			Иначе
				НовГруппа.ЦветФона = WebЦвета.Лазурный;
			КонецЕсли;
			
			Элементы.ВсегоКурсов.Заголовок = "Все курсы (" + НомерКурса + ")";
			НовЭл = Элементы.Добавить("Эл_" + ВсеКурсы.Индекс(ТекСтрока), Тип("ПолеФормы"), НовГРуппа);
			НовЭл.ПутьКДанным = "ВсеКурсы[" + ВсеКурсы.Индекс(ТекСтрока) + "].Логотип";
			НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
			НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Низ;
			НовЭл.Заголовок = ТекСтрока.Название;
			НовЭл.РастягиватьПоГоризонтали = Истина;
			НовЭл.РастягиватьПоВертикали = Ложь;
			НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
			НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
			НовЭл.Ширина =15;
			НовЭл.ШрифтЗаголовка = Новый Шрифт("стиль: обычный шрифт текста", 13, Истина);
			НовЭл.Гиперссылка = Истина;
			НовЭл.УстановитьДействие("Нажатие", "ЭлНажатие");
		КонецЦикла;
	Исключение
		Сообщить("Ошибка подключения к серверу");
	КонецПопытки;
			
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МассЗаг = СтрРазделить(Элемент.Заголовок, Символы.ПС);
	СтруктураНазв = Новый Структура;
	СтруктураНазв.Вставить("Название", МассЗаг[0]);
	Оповестить("ВсеКурсы");
	ОткрытьФорму("ОбщаяФорма.СодержаниеКурса", СтруктураНазв);
КонецПроцедуры

&НаКлиенте
Процедура ВозвратНазад(Команда)
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.ОсновноеМеню");
КонецПроцедуры




ОбщиеФормы.СодержаниеКурса.Модуль:
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВсеКурсы"
		Тогда
		ПриСоздании1(Ложь, Истина, Параметр);
	ИначеЕсли ИмяСобытия = "МоиКурсы"
		Тогда
		ПриСоздании2(Ложь, Истина, Параметр);	
	КонецЕсли;
КонецПроцедуры

Процедура ПриСоздании1(Отказ, СтандартнаяОбработка, Параметры)
	НазваниеКурса = Параметры.Название;
	МассКурс = СтрРазделить(НазваниеКурса, Символы.ПС);
	Название = Строка(МассКурс[0]);
	Если ПроверитьВидео(Название) = Истина
		Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	Иначе
		Элементы.НачатьПрохождениеТестирования.Видимость = Ложь;
	КонецЕсли;
	
	Спр = Справочники.ВсеКурсы.НайтиПоНаименованию(Название).ПолучитьОбъект();
	СтрокаТЧ = СписокКурсов.Добавить();
	СтрокаТЧ.Название = Спр.Наименование;
	СтрокаТЧ.Описание = Спр.Описание;
	СтрокаТЧ.Логотип = ПолучитьНавигационнуюСсылку(Спр.Логотип, "Значение");
	
	СписокВидео.Очистить();
	
	Родитель = Элементы.ГруппаСтраницыВсе;
	
	ЗанятиеГ = Элементы.Добавить("Программа", Тип("ГруппаФормы"), Родитель);
	ЗанятиеГ.Вид = ВидГруппыФормы.Страница;
	ЗанятиеГ.Заголовок = "Программа";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Наименование КАК Наименование,
		|	Файлы.Курс КАК Курс,
		|	Файлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Курс = &Курс";
	
	Запрос.УстановитьПараметр("Курс", Название);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаВ = СписокВидео.Добавить();
		СтрокаВ.Название = ВыборкаДетальныеЗаписи.Наименование;
		СтрокаВ.Видео = ПолучитьНавигационнуюСсылку(ВыборкаДетальныеЗаписи.Ссылка, "Значение");
		СписокВидео.Количество();
	КонецЦикла;
	
	Если НомерВидео = Неопределено
		Тогда
		НомерВидео = 0;
	КонецЕсли;
	Для Каждого Видео Из СписокВидео
	Цикл
		Родитель = ЗанятиеГ;
		НомерВидео = НомерВидео + 1;
		
		НовЭл = Элементы.Добавить("Название" + НомерВидео, Тип("ДекорацияФормы"), Родитель);
		НовЭл.Вид = ВидДекорацииФормы.Картинка;
		НовЭл.Картинка = БиблиотекаКартинок.КартинкаПросмотраВидео;
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Высота = 5;
		НовЭл.Гиперссылка = Истина;
		
		НовЭл.УстановитьДействие("Нажатие", "ДекНаж");
	КонецЦикла;
	
	НомерКурса = 0;
	Для Каждого Курс Из СписокКурсов
		Цикл
		НомерКурса = НомерКурса + 1;
		Родитель = Элементы.ГруппаЛоготип;
		НовЭл = Элементы.Добавить("Эл_" + СписокКурсов.Индекс(Курс), Тип("ПолеФормы"), Родитель);
		НовЭл.ПутьКДанным = "СписокКурсов[" + СписокКурсов.Индекс(Курс) + "].Логотип";
		НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
		НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Низ;
		НовЭл.Заголовок = Курс.Название;
		НовЭл.РастягиватьПоВертикали = Ложь;
		НовЭл.РастягиватьПоГоризонтали = Ложь;
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриСоздании2(Отказ, СтандартнаяОбработка, Параметры)
	ПриСоздании1(Ложь, Истина, Параметры);
КонецПроцедуры

Функция ПроверитьВидео(Курс)
		
	ЗапросВидео = Новый Запрос;
	ЗапросВидео.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Наименование КАК Наименование,
		|	Файлы.Значение КАК Значение
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Курс = &Курс";
	
	ЗапросВидео.УстановитьПараметр("Курс", Курс);
	
	РезультатЗапросаВидео = ЗапросВидео.Выполнить();
	
	ВыборкаДетальныеЗаписиВидео = РезультатЗапросаВидео.Выбрать();
	
	ВсегоВидео = 0;
	Пока ВыборкаДетальныеЗаписиВидео.Следующий() Цикл
		СтрокаТЧ = СписокВидео.Добавить();
		СтрокаТЧ.Название = ВыборкаДетальныеЗаписиВидео.Наименование;
		Спр = Справочники.Файлы.НайтиПоНаименованию(СтрокаТЧ.Название).ПолучитьОбъект();
		СтрокаТЧ.Видео = ПолучитьНавигационнуюСсылку(Спр.Ссылка, "Значение");
		ВсегоВидео = ВсегоВидео + 1;
	КонецЦикла;
	
	Если Счётчик = ВсегоВидео
		Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ДекНаж(Элемент, СтандартнаяОбработка)
	Попытка
		Номер = Число(Прав(Элемент.Имя, 3));
	Исключение
		Попытка
			Номер = Число(Прав(Элемент.Имя, 2));
		Исключение
			Номер = Число(Прав(Элемент.Имя, 1));
		КонецПопытки;
	КонецПопытки;
	Счётчик = Номер;
	НажатиеНаСервере(Номер);	
КонецПроцедуры

Процедура НажатиеНаСервере(Номер)
	Курс = Название;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Значение КАК Значение,
		|	Файлы.Наименование КАК Наименование,
		|	Файлы.Курс КАК Курс,
		|	Файлы.Код КАК Код,
		|	Файлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Курс = &Курс";
	
	Запрос.УстановитьПараметр("Курс", Курс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ПП = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПП = ПП + 1;
		Если ПП = Номер
			Тогда
			СС = XMLСтрока(ВыборкаДетальныеЗаписи.Значение);
			ДД = XMLЗначение(Тип("ХранилищеЗначения"), СС).Получить();
			ДД.Записать(КаталогВременныхФайлов() + "file.mp4");
			ЗапуститьПриложение(КаталогВременныхФайлов() + "file.,p4");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры









@Ринат

ОбщиеФормы.СписокКурсов.Модуль:
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   
	Если Константы.Зарегистрирован.Получить() = Истина Тогда
		Элементы.ГруппаРегистрация.Видимость = Ложь;
		Элементы.ГруппаКурсы.Доступность = Истина;
	Иначе
		Элементы.ГруппаРегистрация.Видимость = Истина;
		Элементы.ГруппаКурсы.Доступность = Ложь;		
	КонецЕсли; 
	
	Попытка
		Соединение = Новый HTTPСоединение("localhost");	
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
	КонецПопытки;     
	Запрос = Новый HTTPЗапрос("server/hs/obmen/studycurses");
	Запрос.УстановитьТелоИзСтроки("");
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
		Для каждого ТекСтрока Из ПолученныеДанные Цикл
			НовСтрока = СписокКурсов.Добавить();
			НовСтрока.Наименование = ТекСтрока.Наименование;
			НовСтрока.Направление = ТекСтрока.Направление;
			НовСтрока.КоличествоМодулей = ТекСтрока.КоличествоМодулей;
			НовСтрока.КоличествоУроков = ТекСтрока.КоличествоУроков;
			НовСтрока.Описание = ТекСтрока.Описание;   
			
			НовФайл1 = Справочники.Файлы.СоздатьЭлемент();
			НовФайл1.Значение = ТекСтрока.Логотип;
			НовФайл1.Записать();    
			
			НовСтрока.Логотип = ПолучитьНавигационнуюСсылку(НовФайл1.Ссылка, "Значение");   
		КонецЦикла;
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;    
	
	НомерКурса = 0;
	Для каждого ТекСтрока Из СписокКурсов Цикл                  
		Родитель = Элементы.ГруппаКурсы;
		НомерКурса = НомерКурса + 1;    
		
		НовГруппа = Элементы.Добавить("Группа_" + СписокКурсов.Индекс(ТекСтрока), Тип("ГруппаФормы"), Родитель);
		НовГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;   
		Если НомерКурса = 1 Тогда
			НовГруппа.ЦветФона = WebЦвета.Синий;   
		ИначеЕсли НомерКурса = 2 Тогда
			НовГруппа.ЦветФона = WebЦвета.Фуксия;
		ИначеЕсли НомерКурса = 3 Тогда
			НовГруппа.ЦветФона = WebЦвета.СветлоЗеленый;
		КонецЕсли;
		
		Элементы.Декорация5.Заголовок = "Все курсы " + "(" + НомерКурса + ")";	
		НовЭл = Элементы.Добавить("Эл_" + СписокКурсов.Индекс(ТекСтрока), Тип("ПолеФормы"), НовГруппа);
		НовЭл.ПутьКДанным = "СписокКурсов["+СписокКурсов.Индекс(ТекСтрока)+"].Логотип";   
		НовЭл.Вид = ВидПоляФормы.ПолеКартинки;  
		НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Низ;
		НовЭл.Заголовок = ТекСтрока.Наименование + Символы.ПС + ТекСтрока.Направление + Символы.ПС + ТекСтрока.КоличествоМодулей + " модулей " +
		" " + ТекСтрока.КоличествоУроков + " урока";  
		НовЭл.РастягиватьПоГоризонтали = Истина;
		НовЭл.РастягиватьПоВертикали = Ложь;          
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);  
		НовЭл.Ширина = 15;                       
		НовЭл.ШрифтЗаголовка = Новый Шрифт("стиль: Обычный шрифт текста", 13, Истина);
		НовЭл.Гиперссылка = Истина; 
		НовЭл.УстановитьДействие("Нажатие", "ЭлНажатие"); 
	КонецЦикла;
	
	Если Константы.Курс1Выбран.Получить() = Истина И ЗначениеЗаполнено(Константы.Курс1.Получить()) Тогда 
		Попытка
			Соединение = Новый HTTPСоединение("localhost");	
		Исключение
			Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
		КонецПопытки;     
		Запрос = Новый HTTPЗапрос("server/hs/obmen/studiedcurses"); 
		Запрос.УстановитьТелоИзСтроки("");
		Ответ = Соединение.Получить(Запрос);
		
		Если Ответ.КодСостояния = 200 Тогда
			ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
			ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
			Элементы.ГруппаМоиКурсы.Видимость = Истина;
			Для каждого ТекСтрока Из ПолученныеДанные.МоиКурсы Цикл 
				НовСтрока = СписокМоиКурсы.Добавить();
				НовСтрока.Наименование = ТекСтрока.КурсНаименование;
				НовСтрока.Направление = ТекСтрока.КурсНаправление;
				НовСтрока.Время = ТекСтрока.Время;   
				
				НовФайл = Справочники.Файлы.СоздатьЭлемент();
				НовФайл.Значение = ТекСтрока.Логотип;
				НовФайл.Записать();    
				
				НовСтрока.Логотип = ПолучитьНавигационнуюСсылку(НовФайл.Ссылка, "Значение");
			КонецЦикла;
		Иначе 
			Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
		КонецЕсли;        
		
		НомерКурса = 0;
		Для Каждого ТекСтрока Из СписокМоиКурсы Цикл  
			НомерКурса = НомерКурса + 1;
			Сек = ТекСтрока.Время;
			Лимит = Дата(Сек) + (60 *60 * 24 * 14);
			Раз = Лимит - ТекущаяДата();
			Дни = Цел(Раз / 3600 / 24);
			Часы = Цел((Раз % 86400) / 3600); 
			
			Если Раз = 0 Тогда
				Попытка
					Соединение = Новый HTTPСоединение("localhost");
				Исключение
					Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
				КонецПопытки;
				
				Запрос = Новый HTTPЗапрос("server/hs/obmen/cursdelete");
				Запрос.УстановитьТелоИзСтроки(ТекСтрока.Наименование);
				Ответ = Соединение.Получить(Запрос);
				
				Если Ответ.КодСостояния = 200 Тогда
					Сообщить("У вас закончился курс " + ТекСтрока.Наименование);					
				Иначе
					Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
				КонецЕсли;
			КонецЕсли;
			
			
			Родитель = Элементы.ГруппаМоиКурсы;
			
			//Группа страница
			Страниц = Элементы.Добавить("Страница" + НомерКурса, Тип("ГруппаФормы"), Родитель);
			Страниц.Вид = ВидГруппыФормы.Страница;
			Страниц.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная; 
			Страниц.ЦветФона = WebЦвета.Черный;
			Если НомерКурса = 1 Тогда
				Страниц.Заголовок = "Курс 1"; 
			ИначеЕсли НомерКурса = 2 Тогда 
				Страниц.Заголовок = "Курс 2";
			Иначе
				Страниц.Заголовок = "Курс 3";	
			КонецЕсли;   
			Страниц.ЦветТекстаЗаголовка = WebЦвета.Белый;
			
			
			//Подгруппа
			ПодГ = Элементы.Добавить("ПодГруппа" + НомерКурса + "1", Тип("ГруппаФормы"), Элементы["Страница" + НомерКурса]);
			ПодГ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ПодГ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда; 
			ПодГ.ЦветФона = WebЦвета.Серый;
			
			
			//ПодПодГруппа 
			ПодПодГ = Элементы.Добавить("ПодПодГруппа" + НомерКурса, Тип("ГруппаФормы"), Элементы["ПодГруппа" + НомерКурса + "1"]);
			ПодПодГ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ПодПодГ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;  
			ПодПодГ.РастягиватьПоГоризонтали = Истина;
			
			
			//Логотип курса
			НовЭл = Элементы.Добавить("ЭлЛоготип_" + СписокМоиКурсы.Индекс(ТекСтрока), Тип("ПолеФормы"), Элементы["ПодГруппа" + НомерКурса + "1"]);
			НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
			НовЭл.ПутьКДанным = "СписокМоиКурсы["+СписокМоиКурсы.Индекс(ТекСтрока)+"].Логотип";
			НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
			НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовЭл.РастягиватьПоГоризонтали = Ложь;
			НовЭл.РастягиватьПоВертикали = Ложь;          
			НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
			НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);  
			НовЭл.Ширина = 15;	
			НовЭл.Гиперссылка = Истина;  
			
			//Направление
			Направ = Элементы.Добавить("Направление" + НомерКурса, Тип("ДекорацияФормы"), Элементы["ПодПодГруппа" + НомерКурса]);
			Направ.Вид = ВидДекорацииФормы.Надпись;
			Направ.Заголовок = ТекСтрока.Направление;
			Направ.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;    
			
			//Наименование
			Наим = Элементы.Добавить("Наим" + НомерКурса, Тип("ДекорацияФормы"), Элементы["ПодПодГруппа" + НомерКурса]);
			Наим.Вид = ВидДекорацииФормы.Надпись;
			Наим.Заголовок = ТекСтрока.Наименование;
			Наим.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
			Наим.ЦветТекста = WebЦвета.Белый;
			
			//Подгруппа 2 
			ПодГруп2 = Элементы.Добавить("Подгруппа" + НомерКурса + "2", Тип("ГруппаФормы"), Элементы["Страница" + НомерКурса]);
			ПодГруп2.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ПодГруп2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			
			//Остаток время
			Остаток = Элементы.Добавить("Ост" + НомерКурса, Тип("ДекорацияФормы"), Элементы["Подгруппа" + НомерКурса + 2]);
			Остаток.Вид = ВидДекорацииФормы.Надпись;
			Остаток.Заголовок = "Курс будет доступен" + Символы.ПС + " еще " + Дни + " дней и " + Часы + " часа";   
			Остаток.ЦветТекста = WebЦвета.Белый;
			
			Элементы.Декорация4.Заголовок = "Мои курсы " + "(" + НомерКурса + ")";  
		КонецЦикла;
		
			
		
		//НомерКурса = 0;
		//Для каждого ТекСтрока Из СписокМоиКурсы Цикл
		//	НомерКурса = НомерКурса + 1;      
		//	Если НомерКурса = 1 Тогда
		//		Родитель = Элементы.ГруппаСтраница1;
		//	ИначеЕсли НомерКурса = 2 Тогда  
		//		Родитель = Элементы.ГруппаСтраница2;  
		//	Иначе
		//		Родитель = Элементы.ГруппаСтраница3;
		//	КонецЕсли;                 
		//	
		//	Попытка 
		//		Соединение = Новый HTTPСоединение("localhost");
		//	Исключение
		//		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());    
		//	КонецПопытки;
		//	
		//	Запрос = Новый HTTPЗапрос("server/hs/obmen/timestart");
		//	Ответ = Соединение.Получить(Запрос);
		//	
		//	Если Ответ.КодСостояния = 200 Тогда
		//		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		//		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();   
		//		
		//		Для каждого ТекСтрока2 Из ПолученныеДанные.ПроходимыеКурсы Цикл 
		//			Сек = ТекСтрока2.Время;
		//			Лимит = Сек + (3600 * 24 * 14);
		//			Разность = Лимит - Сек;
		//			Дни = Цел(Разность / 3600 / 24);
		//			Часы = Цел((Разность % 86400) / 3600);
		//			
		//			Если НомерКурса = 1 Тогда
		//				Время1 = "Курс будет доступен еще " + Дни + " дней " + " и " + Часы + " часа";
		//			ИначеЕсли НомерКурса = 2 Тогда  
		//				Время2 = "Курс будет доступен еще " + Дни + " дней " + " и " + Часы + " часа";
		//			Иначе
		//				Время3 = "Курс будет доступен еще " + Дни + " дней " + " и " + Часы + " часа";						
		//			КонецЕсли;
		//		КонецЦикла;
		//	Иначе
		//		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());  
		//	КонецЕсли;
		//	
		//	
		//	НовЭл = Элементы.Добавить("ЭлЛоготип_" + СписокМоиКурсы.Индекс(ТекСтрока), Тип("ПолеФормы"), Родитель);
		//	НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
		//	НовЭл.ПутьКДанным = "СписокМоиКурсы["+СписокМоиКурсы.Индекс(ТекСтрока)+"].Логотип";
		//	НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
		//	Если НомерКурса = 1 Тогда
		//		НовЭл.Заголовок = ТекСтрока.Наименование + Символы.ПС + Время1;
		//	ИначеЕсли НомерКурса = 2 Тогда 
		//		НовЭл.Заголовок = ТекСтрока.Наименование + Символы.ПС + Время2;
		//	Иначе
		//		НовЭл.Заголовок = ТекСтрока.Наименование + Символы.ПС + Время3;
		//	КонецЕсли;
		//	
		//	НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Низ;
		//	НовЭл.РастягиватьПоГоризонтали = Ложь;
		//	НовЭл.РастягиватьПоВертикали = Ложь;          
		//	НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		//	НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);  
		//	НовЭл.Ширина = 15;
		//	НовЭл.ШрифтЗаголовка = Новый Шрифт("стиль: Обычный шрифт текста", 10);	
		//	НовЭл.Гиперссылка = Истина;  			
		//КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭлНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;     
	МассЗаголовок = СтрРазделить(Элемент.Заголовок, Символы.ПС);
	СтрукНазвание = Новый Структура;
	СтрукНазвание.Вставить("Название", МассЗаголовок[0]);
	ОткрытьФорму("ОбщаяФорма.СодержаниеКурса", СтрукНазвание);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДоступ(Команда)
	ОткрытьФорму("ОбщаяФорма.РегистрацияПользователя");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Зарегистрировался" Тогда
		Элементы.ГруппаРегистрация.Доступность = Истина;
	Иначе
		Элементы.ГруппаРегистрация.Доступность = Ложь;		
	КонецЕсли;    
	
	Если ИмяСобытия = "ОбновитьКурсы" Тогда
		ПриСозданииНаСервере(Ложь, Ложь);
	КонецЕсли;       
КонецПроцедуры




ОбщиеФормы.РегистрацияПользователя.Модуль:
&НаКлиенте
Процедура Зарегистироваться(Команда)
	Если ЗарегистироватьсяНаСервере() Тогда
		ОткрытьФорму("ОбщаяФорма.УспешнаяРегистрация");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗарегистироватьсяНаСервере()
	Попытка
	    Соединение = Новый HTTPСоединение("localhost");
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());	
	КонецПопытки;   
	Запрос = Новый HTTPЗапрос("server/hs/obmen/users");
	СтрукПольз = Новый Структура;
	СтрукПольз.Вставить("Имя", Имя);
	СтрукПольз.Вставить("Телефон", Телефон);
	СтрукПольз.Вставить("ЭлектроннаяПочта", ЭлектроннаяПочта);
	СтрукПольз.Вставить("Пароль", Пароль); 
	ОтветСтрока = XMLСтрока(Новый ХранилищеЗначения(СтрукПольз));
	Запрос.УстановитьТелоИзСтроки(ОтветСтрока);
	Ответ = Соединение.Записать(Запрос); 	   
	Если Ответ.КодСостояния = 200 Тогда
		Сообщить("Данные отправлены на сервер, вы успешно зарегистрировались");   
		Константы.Зарегистрирован.Установить(Истина);  
		Константы.ТекущийПользователь.Установить(Имя);
		Возврат Истина;   
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());  
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПоказатьПароль(Команда)
	Если Элементы.Пароль.РежимПароля = Истина Тогда
		Элементы.Пароль.РежимПароля = Ложь;
	Иначе
		Элементы.Пароль.РежимПароля = Истина;
	КонецЕсли;		
КонецПроцедуры




ОбщиеФормы.УспешнаяРегистрация.Модуль:
&НаКлиенте
Процедура ПерейтиККурсам(Команда) 
	ЭтаФорма.Закрыть();
	ОткрытьФорму("ОбщаяФорма.СписокКурсов"); 
	Оповестить("Зарегистрировался");
КонецПроцедуры




ОбщиеФормы.СодержаниеКурса.Модуль:
&НаСервере                                                   
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	Если ПроверитьВидео() Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	Иначе
		Элементы.НачатьПрохождениеТестирования.Видимость = Ложь; 
	КонецЕсли;
	НазваниеКурса = Параметры.Название;   
	МассКурс = СтрРазделить(НазваниеКурса, Символы.ПС);    
	Название = МассКурс[0];               
	
	
	Если Константы.ВыбранныйКурс.Получить() = Название И Константы.Курс1Выбран.Получить() = Истина Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	ИначеЕсли Константы.ВыбранныйКурс.Получить() = Название И Константы.Курс2Выбран.Получить() = Истина Тогда  
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	ИначеЕсли Константы.ВыбранныйКурс.Получить() = Название И Константы.Курс3Выбран.Получить() = Истина Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	КонецЕсли;
	
	Попытка
		Соединение = Новый HTTPСоединение("localhost");	
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
	КонецПопытки;  
	Запрос = Новый HTTPЗапрос("server/hs/obmen/studycurses");
	Запрос.УстановитьТелоИзСтроки(Название);
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	Если Ответ.КодСостояния = 200 Тогда 
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
		
		Для каждого ТекСтрока Из ПолученныеДанные Цикл
			НовСтрока = СписокКурсов.Добавить();
			НовСтрока.Наименование = ТекСтрока.Наименование;
			НовСтрока.Направление = ТекСтрока.Направление;
			НовСтрока.КоличествоМодулей = ТекСтрока.КоличествоМодулей;
			НовСтрока.КоличествоУроков = ТекСтрока.КоличествоУроков;
			НовСтрока.Описание = ТекСтрока.Описание;        
			Константы.ВыбранныйКурс.Установить(НовСтрока.Наименование);
			
			НовФайл1 = Справочники.Файлы.СоздатьЭлемент();
			НовФайл1.Значение = ТекСтрока.Логотип;
			НовФайл1.Записать(); 
			
			НовСтрока.Логотип = ПолучитьНавигационнуюСсылку(НовФайл1.Ссылка, "Значение");
			
			Для каждого ТекСтрока2 Из ТекСтрока.СписокВидео Цикл 
				НовФайл2 = Справочники.Файлы.СоздатьЭлемент();
				НовФайл2.Значение = ТекСтрока2.Видео;  
				НовФайл2.Наименование = ТекСтрока2.Название;
				НовФайл2.Записать();  
				
				НовСтрока2 = СписокВидео.Добавить();
				НовСтрока2.Видео = ПолучитьНавигационнуюСсылку(НовФайл2.Ссылка, "Значение");
				НовСтрока2.Название = ТекСтрока2.Название;
			КонецЦикла;
			Описание = ТекСтрока.Описание;
		КонецЦикла;
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;    
	
	НомерКурса = 0;  
	Для каждого ТекСтрока Из СписокКурсов Цикл
		НомерКурса = НомерКурса + 1;
		Родитель = Элементы.ГруппаЛоготипНазвание;
		НовЭл = Элементы.Добавить("Эл_" + СписокКурсов.Индекс(ТекСтрока), Тип("ПолеФормы"), Родитель);
		НовЭл.ПутьКДанным = "СписокКурсов["+СписокКурсов.Индекс(ТекСтрока)+"].Логотип";  
		НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
		НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Низ;
		НовЭл.Заголовок = ТекСтрока.Наименование + Символы.ПС + ТекСтрока.КоличествоМодулей + " модулей" + " " + ТекСтрока.КоличествоУроков + " уроков";
		НовЭл.РастягиватьПоВертикали = Ложь;
		НовЭл.РастягиватьПоГоризонтали = Ложь; 
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);    
		
	КонецЦикла; 
	
	НомерВидео = 0;
	Для каждого ТекСтрока Из СписокВидео Цикл 
		Родитель = Элементы.ГруппаСтраницаПрограмма;
		НомерВидео = НомерВидео + 1;
		НомерКурса = НомерКурса + 1;
		
		НовЭл = Элементы.Добавить("Название" + Строка(НомерВидео), Тип("ДекорацияФормы"), Родитель);
		НовЭл.Вид = ВидДекорацииФормы.Картинка;
		НовЭл.Картинка = БиблиотекаКартинок.КартинкаПросмотраВидео;
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Высота = 5;     
		НовЭл.Гиперссылка = Истина;  
		
		Если НомерВидео = 1 Тогда
			НовЭл.УстановитьДействие("Нажатие", "Декорация3Нажатие");
		ИначеЕсли НомерВидео = 2 Тогда
			НовЭл.УстановитьДействие("Нажатие", "Декорация4Нажатие");
		Иначе
			НовЭл.УстановитьДействие("Нажатие", "Декорация5Нажатие");			
		КонецЕсли;
	КонецЦикла;
	
	Название = Параметры.Название;
	
	Попытка
		Соединение = Новый HTTPСоединение("localhost");	
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
	КонецПопытки;  
	Запрос = Новый HTTPЗапрос("server/hs/obmen/recomendation");
	Запрос.УстановитьТелоИзСтроки(Название);
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда 
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
		
		Для каждого ТекСтрока Из ПолученныеДанные Цикл
			НовСтрока = СписокКурсовРекомендаций.Добавить();
			НовСтрока.Наименование = ТекСтрока.Наименование;
			НовСтрока.Направление = ТекСтрока.Направление;
			НовСтрока.КоличествоМодулей = ТекСтрока.КоличествоМодулей;
			НовСтрока.КоличествоУроков = ТекСтрока.КоличествоУроков;
			НовСтрока.Описание = ТекСтрока.Описание;   
			
			НовФайл1 = Справочники.Файлы.СоздатьЭлемент();
			НовФайл1.Значение = ТекСтрока.Логотип;
			НовФайл1.Записать();
			
			НовСтрока.Логотип = ПолучитьНавигационнуюСсылку(НовФайл1.Ссылка, "Значение");
		КонецЦикла;
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;    
	
	//Рекомендуемые курсы
	НомерКурса = 0;
	Для каждого ТекСтрока Из СписокКурсовРекомендаций Цикл
		НомерКурса = НомерКурса + 1;
		Родитель = Элементы.ГруппаСтраницаРекомендации;
		НовЭл = Элементы.Добавить("Элл_" + СписокКурсовРекомендаций.Индекс(ТекСтрока), Тип("ПолеФормы"), Родитель);
		НовЭл.ПутьКДанным = "СписокКурсовРекомендаций["+СписокКурсовРекомендаций.Индекс(ТекСтрока)+"].Логотип";  
		НовЭл.Вид = ВидПоляФормы.ПолеКартинки;
		НовЭл.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовЭл.Заголовок = ТекСтрока.Направление + Символы.ПС + ТекСтрока.Наименование;
		НовЭл.РастягиватьПоВертикали = Ложь;
		НовЭл.РастягиватьПоГоризонтали = Ложь; 
		НовЭл.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовЭл.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);    
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НачатьПрохождениеИнтенсива(Команда)
	НачатьПрохождениеИнтенсиваНаСервере();  
КонецПроцедуры

&НаСервере
Процедура НачатьПрохождениеИнтенсиваНаСервере()
	Попытка
		Соединение = Новый HTTPСоединение("localhost");	
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());	
	КонецПопытки;                                           
	Пользователь = Константы.ТекущийПользователь.Получить();
	Запрос = Новый HTTPЗапрос("server/hs/obmen/startcurs"); 
	ДанныеДляОтправки = Название + ";" + Видео1Пройдено + ";" + Видео2Пройдено + ";" + Видео3Пройдено + Пользователь;
	Запрос.УстановитьТелоИзСтроки(ДанныеДляОтправки);
	Ответ = Соединение.Записать(Запрос);   
	Константы.Курс1.Установить(Название);
	УстановитьКонстанты();   
КонецПроцедуры  

&НаСервере
Процедура ОтправитьПройденныеВидео()
	Попытка
		Соединение = Новый HTTPСоединение("localhost");	
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());	
	КонецПопытки;                                     
	Пользователь = Константы.ТекущийПользователь.Получить();
	Запрос = Новый HTTPЗапрос("server/hs/obmen/startcurs"); 
	ДанныеДляОтправки = Название + ";" + Видео1Пройдено + ";" + Видео2Пройдено + ";" + Видео3Пройдено + ";" + Пользователь;
	Запрос.УстановитьТелоИзСтроки(ДанныеДляОтправки);
	Ответ = Соединение.Записать(Запрос);   
	Константы.Курс1.Установить(Название);
	УстановитьКонстанты();
КонецПроцедуры

&НаСервере
Функция ПроверитьВидео()   
	Если Видео1Пройдено = Истина И Видео2Пройдено = Истина И Видео3Пройдено = Истина Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте                                                    
Процедура Декорация3Нажатие(Элемент, СтандартнаяОбработка)     
	Счетчик = 1;
	ЗапуститьВидео();
	
	
	СтандартнаяОбработка = Ложь;
	Видео1Пройдено = Истина;    
	УстановитьКонстанты();
	ОтправитьПройденныеВидео(); 
	Если ПроверитьВидео() Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	Иначе
		Элементы.НачатьПрохождениеТестирования.Видимость = Ложь; 
	КонецЕсли;
КонецПроцедуры   

&НаСервере
Процедура ЗапуститьВидео()   
	
	Попытка 
		Соединение = Новый HTTPСоединение("localhost");
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());
	КонецПопытки;
	
	ЗапросHTTP = Новый HTTPЗапрос("server/hs/obmen/video");
	СтрокаОтправки = Константы.ВыбранныйКурс.Получить() + ";" + Счетчик;
	ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаОтправки);
	Ответ = Соединение.Получить(ЗапросHTTP);
	Если Ответ.КодСостояния = 200 Тогда
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
		
		Для Каждого ТекСтрока Из ПолученныеДанные Цикл
			ДД = ТекСтрока.ВидеоЗначение.Получить();  
			ДД.Записать(КаталогВременныхФайлов() + "file.mp4"); 
			ЗапуститьПриложение(КаталогВременныхФайлов() + "file.mp4");
		КонецЦикла;
		
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + Символы.ПС + Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура Декорация4Нажатие(Элемент, СтандартнаяОбработка)
	Счетчик = 2;
	ЗапуститьВидео();
	
	СтандартнаяОбработка = Ложь;
	Видео2Пройдено = Истина;      
	УстановитьКонстанты();   
	ОтправитьПройденныеВидео();    
	Если ПроверитьВидео() Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	Иначе
		Элементы.НачатьПрохождениеТестирования.Видимость = Ложь; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Декорация5Нажатие(Элемент, СтандартнаяОбработка)   
	Счетчик = 3;
	ЗапуститьВидео();
	
	СтандартнаяОбработка = Ложь;
	Видео3Пройдено = Истина;   
	УстановитьКонстанты();     
	ОтправитьПройденныеВидео();
	Если ПроверитьВидео() Тогда
		Элементы.НачатьПрохождениеТестирования.Видимость = Истина;
	Иначе
		Элементы.НачатьПрохождениеТестирования.Видимость = Ложь; 
	КонецЕсли;
КонецПроцедуры  

&НаСервере
Процедура УстановитьКонстанты()
	Если Название = "Photoshop с нуля" Тогда
		Константы.Курс1Выбран.Установить(Истина); 
	ИначеЕсли Название = "Введение в машинное обучение" Тогда
		Константы.Курс2Выбран.Установить(Истина);
	Иначе  
		Константы.Курс3Выбран.Установить(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НачатьПрохождениеТестирования(Команда)
	ОткрытьФорму("ОбщаяФорма.Тестирование");
КонецПроцедуры

		


ОбщиеФормы.Тестирование.Модуль:
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьВопросыОтСервера();
КонецПроцедуры

&НаСервере
Процедура ПолучитьВопросыОтСервера()
	ВыбранныйКурс = Константы.ВыбранныйКурс.Получить();
	Попытка
		Соединение = Новый HTTPСоединение("localhost");
	Исключение
		Сообщить("Не удалось установить соединение " + ОписаниеОшибки());	
	КонецПопытки; 
	Запрос = Новый HTTPЗапрос("server/hs/obmen/voprositest");
	Запрос.УстановитьТелоИзСтроки(Константы.ВыбранныйКурс.Получить());
	Ответ = Соединение.Получить(Запрос);   
	Если Ответ.КодСостояния = 200 Тогда 
		Счетчик = Счетчик + 1;
		ОтветСтрока = Ответ.ПолучитьТелоКакСтроку();
		ПолученныеДанные = XMLЗначение(Тип("ХранилищеЗначения"), ОтветСтрока).Получить();
		
		НазваниеВопроса = ПолученныеДанные.Вопрос;        
		
		ГСЧ = Новый ГенераторСлучайныхЧисел;
		СлучЧисло = ГСЧ.СлучайноеЧисло(1, 5);
		
		ВерныйОтвет = ПолученныеДанные.ВерныйОтвет;
		Если СлучЧисло = 1 Тогда
			Ответ1 = ПолученныеДанные.ВерныйОтвет;
			Ответ2 = ПолученныеДанные.НеверныйОтвет1;
			Ответ3 = ПолученныеДанные.НеверныйОтвет2;
		ИначеЕсли СлучЧисло = 2 Тогда 
			Ответ1 = ПолученныеДанные.НеверныйОтвет1;
			Ответ2 = ПолученныеДанные.ВерныйОтвет;
			Ответ3 = ПолученныеДанные.НеверныйОтвет2;  
		ИначеЕсли СлучЧисло = 3 Тогда   
			Ответ1 = ПолученныеДанные.НеверныйОтвет1;
			Ответ2 = ПолученныеДанные.НеверныйОтвет2;
			Ответ3 = ПолученныеДанные.ВерныйОтвет;  
		ИначеЕсли СлучЧисло = 4 Тогда   
			Ответ1 = ПолученныеДанные.НеверныйОтвет2;
			Ответ2 = ПолученныеДанные.ВерныйОтвет;
			Ответ3 = ПолученныеДанные.НеверныйОтвет1;  
		ИначеЕсли СлучЧисло = 5 Тогда
			Ответ1 = ПолученныеДанные.НеверныйОтвет2;
			Ответ2 = ПолученныеДанные.НеверныйОтвет1;
			Ответ3 = ПолученныеДанные.ВерныйОтвет;
		КонецЕсли;  
		
		Если Счетчик = 1 Тогда
			Элементы.Декорация1.Заголовок = "Вопрос 1";
			Элементы.Назад.Видимость = Ложь;
		ИначеЕсли Счетчик = 2 Тогда
			Элементы.Декорация1.Заголовок = "Вопрос 2";   
			Элементы.Назад.Видимость = Истина;
		ИначеЕсли Счетчик = 3 Тогда
			Элементы.Декорация1.Заголовок = "Вопрос 3"; 
			Элементы.Назад.Видимость = Истина;
		ИначеЕсли Счетчик = 4 Тогда
			Элементы.Декорация1.Заголовок = "Вопрос 4";     
			Элементы.Назад.Видимость = Истина;
		ИначеЕсли Счетчик = 5 Тогда
			Элементы.Декорация1.Заголовок = "Вопрос 5"; 
			Элементы.Назад.Видимость = Истина;
		Иначе  
			НеобходимоОткрытьФорму = Истина;
		КонецЕсли;		
	Иначе
		Сообщить("Произошла ошибка " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура Выбран1ПриИзмененииНаСервере()    	
	Если Выбран1 = Истина И Ответ1 = ВерныйОтвет Тогда
		Элементы.Выбран2.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;
		ТекЗнач = Константы.КоличествоВерных.Получить();
		Константы.КоличествоВерных.Установить(ТекЗнач + 1);
	Иначе        
		ТекЗнач = Константы.КоличествоНеверных.Получить();
		Константы.КоличествоНеверных.Установить(ТекЗнач + 1);
		Элементы.Выбран2.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;		
	КонецЕсли;  
	
	Если Выбран1 = Истина Тогда 
		Элементы.Выбран2.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;
	Иначе
		Элементы.Выбран2.Доступность = Истина;   
		Элементы.Выбран3.Доступность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Выбран1ПриИзменении(Элемент)
	Выбран1ПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура Выбран2ПриИзмененииНаСервере()
	Если Выбран2 = Истина И Ответ2 = ВерныйОтвет Тогда
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;
		ТекЗнач = Константы.КоличествоВерных.Получить();
		Константы.КоличествоВерных.Установить(ТекЗнач + 1);
	Иначе        
		ТекЗнач = Константы.КоличествоНеверных.Получить();
		Константы.КоличествоНеверных.Установить(ТекЗнач + 1);
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;		
	КонецЕсли;
	
	Если Выбран2 = Истина Тогда 
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран3.Доступность = Ложь;
	Иначе
		Элементы.Выбран1.Доступность = Истина;   
		Элементы.Выбран3.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Выбран2ПриИзменении(Элемент)
	Выбран2ПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура Выбран3ПриИзмененииНаСервере()
	Если Выбран3 = Истина И Ответ3 = ВерныйОтвет Тогда
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран2.Доступность = Ложь;
		ТекЗнач = Константы.КоличествоВерных.Получить();
		Константы.КоличествоВерных.Установить(ТекЗнач + 1);
	Иначе        
		ТекЗнач = Константы.КоличествоНеверных.Получить();
		Константы.КоличествоНеверных.Установить(ТекЗнач + 1);
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран2.Доступность = Ложь;		
	КонецЕсли;  
	
	Если Выбран3 = Истина Тогда 
		Элементы.Выбран1.Доступность = Ложь;   
		Элементы.Выбран2.Доступность = Ложь;
	Иначе
		Элементы.Выбран1.Доступность = Истина;   
		Элементы.Выбран2.Доступность = Истина;
	КонецЕсли;    
КонецПроцедуры

&НаКлиенте
Процедура Выбран3ПриИзменении(Элемент)
	Выбран3ПриИзмененииНаСервере();
КонецПроцедуры 

&НаКлиенте
Процедура Далее(Команда)         
	Если Выбран1 = Ложь И Выбран2 = Ложь И Выбран3 = Ложь Тогда
		Сообщить("Необходимо выбрать 1 из 3 вариантов ответов для продолжения");
	Иначе          		
		ПрошлыйВопрос = НазваниеВопроса;     
		ПрошлыйОтвет1 = Ответ1;
		ПрошлыйОтвет2 = Ответ2;
		ПрошлыйОтвет3 = Ответ3;  
		Если Выбран1 = Истина Тогда
			ВыбранныйОтвет = 1;
		ИначеЕсли Выбран2 = Истина Тогда
			ВыбранныйОтвет = 2;
		Иначе
			ВыбранныйОтвет = 3;
		КонецЕсли;       
		
		ПолучитьВопросыОтСервера();
		Элементы.Выбран1.Доступность = Истина;   
		Элементы.Выбран2.Доступность = Истина;    
		Элементы.Выбран3.Доступность = Истина;  
		Выбран1 = Ложь;
		Выбран2 = Ложь;
		Выбран3 = Ложь;
		
		Если НеобходимоОткрытьФорму = Истина Тогда  
			ЭтаФорма.Закрыть();
			ОткрытьФорму("ОбщаяФорма.РезультатыТестирования");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	НазадНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура НазадНаСервере() 
	НомерВопроса = Прав(Элементы.Декорация1.Заголовок, 1);  
	НомерПрошлогоВопроса = Число(НомерВопроса) - 1;
	Если НомерПрошлогоВопроса Тогда        
		Элементы.Декорация1.Заголовок = "Вопрос " + НомерПрошлогоВопроса;
		НазваниеВопроса = ПрошлыйВопрос;
		Ответ1 = ПрошлыйОтвет1;
		Ответ2 = ПрошлыйОтвет2;
		Ответ3 = ПрошлыйОтвет3;
		Если ВыбранныйОтвет = 1 Тогда
			Выбран1 = Истина;
		ИначеЕсли ВыбранныйОтвет = 2 Тогда
			Выбран2 = Истина;
		Иначе
			Выбран3 = Истина;
		КонецЕсли;           
	КонецЕсли;
	
КонецПроцедуры




ОбщиеФормы.РезультатыТестирования.Модуль:
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Правильно = Константы.КоличествоВерных.Получить();
	Неправильно = Константы.КоличествоНеверных.Получить();
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяНаНачальныйЭкран(Команда)
	ВернутьсяНаНачальныйЭкранНаСервере();     
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ВернутьсяНаНачальныйЭкранНаСервере()     
	Попытка
	    Соединение = Новый HTTPСоединение("localhost");	
	Исключение                                      
		Сообщить("Не удалость установить соединение " + ОписаниеОшибки());	
	КонецПопытки;                                   
	Запрос = Новый HTTPЗапрос("server/hs/obmen/testresult");
	Запрос.УстановитьТелоИзСтроки("");
	
	СтрукОтвет = Новый Структура;
	СтрукОтвет.Вставить("Правильно", Правильно);
	СтрукОтвет.Вставить("Неправильно", Неправильно); 
	СтрукОтвет.Вставить("Пользователь", Константы.ТекущийПользователь.Получить());
	СтрукОтвет.Вставить("Курс", Константы.ВыбранныйКурс.Получить());
	
	ОтветСтрока = XMLСтрока(Новый ХранилищеЗначения(СтрукОтвет));
	
	Запрос.УстановитьТелоИзСтроки(ОтветСтрока);
	Ответ = Соединение.Записать(Запрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		Сообщить("Успешно отправлено на сервере");
	Иначе
		Сообщить("Возникла ошибка");	
	КонецЕсли;    
	Константы.КоличествоВерных.Установить(0);
	Константы.КоличествоНеверных.Установить(0);
КонецПроцедуры

&НаСервере
Процедура ОчисткаРезультатовНаСервере()
	Правильно = 0;
	Неправильно = 0;
	
	Константы.КоличествоВерных.Установить(0);
	Константы.КоличествоНеверных.Установить(0);
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаРезультатов(Команда)
	ОчисткаРезультатовНаСервере();
КонецПроцедуры




Справочники.Файлы.Формы.ФормаЭлемента.Модуль:
&НаКлиенте
Процедура ЗагрузитьВидео(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	ОП = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтотОбъект);
	Диалог.Показать(ОП);
КонецПроцедуры       

Процедура ОбработкаВыбораФайла(Результат, ДП) Экспорт
	Если НЕ Результат = Неопределено Тогда
		ДД = Новый ДвоичныеДанные(Результат[0]);
		ЭтотОбъект.Записать();
		О = Объект.Ссылка.ПолучитьОбъект();
		О.Значение = Новый ХранилищеЗначения(ДД);
		О.Записать();
	КонецЕсли;
КонецПроцедуры   

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	О = Объект.Ссылка.ПолучитьОбъект();
КонецПроцедуры
